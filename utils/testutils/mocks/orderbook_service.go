// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	"github.com/tomochain/backend-matching-engine/ws"
	common "github.com/ethereum/go-ethereum/common"
	mock "github.com/stretchr/testify/mock"
)

// OrderBookService is an autogenerated mock type for the OrderBookService type
type OrderBookService struct {
	mock.Mock
}

// GetOrderBook provides a mock function with given fields: bt, qt
func (_m *OrderBookService) GetOrderBook(bt common.Address, qt common.Address) (map[string]interface{}, error) {
	ret := _m.Called(bt, qt)

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func(common.Address, common.Address) map[string]interface{}); ok {
		r0 = rf(bt, qt)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(common.Address, common.Address) error); ok {
		r1 = rf(bt, qt)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Subscribe provides a mock function with given fields: conn, bt, qt
func (_m *OrderBookService) Subscribe(conn *ws.Client, bt common.Address, qt common.Address) {
	_m.Called(conn, bt, qt)
}

// Unsubscribe provides a mock function with given fields: conn, bt, qt
func (_m *OrderBookService) Unsubscribe(conn *ws.Client, bt common.Address, qt common.Address) {
	_m.Called(conn, bt, qt)
}
