{
  "get": {
    "tags": [
      "trades"
    ],
    "summary": "Retrieve the sorted list of trades for an Ethereum address in which the given address is either maker or taker",
    "description": "Return trades array",
    "operationId": "HandleGetTradesHistory",
    "produces": [
      "application/json"
    ],
    "parameters": [
      {
        "name": "address",
        "in": "query",
        "description": "User address",
        "required": true,
        "type": "string"
      },
      {
        "name": "pageOffset",
        "in": "query",
        "description": "",
        "type": "string"
      },
      {
        "name": "pageSize",
        "in": "query",
        "description": "number of trade item per page, default 50",
        "type": "string"
      },
      {
        "name": "sortBy",
        "in": "query",
        "description": "Sort for query (suported sort by time)",
        "type": "string"
      },
      {
        "name": "sortType",
        "in": "query",
        "description": "asc/dec",
        "type": "string"
      },
      {
        "name": "baseToken",
        "in": "query",
        "description": "Base token address",
        "type": "string"
      },
      {
        "name": "quoteToken",
        "in": "query",
        "description": "Quote token address",
        "type": "string"
      },
      {
        "name": "from",
        "in": "query",
        "description": "the beginning timestamp (number of seconds from 1970/01/01) from which order data has to be queried",
        "type": "string"
      },
      {
        "name": "to",
        "in": "query",
        "description": "the ending timestamp ((number of seconds from 1970/01/01)) until which order data has to be queried",
        "type": "string"
      }
    ],
    "responses": {
      "200": {
        "description": "successful operation",
        "schema": {
          "type": "object",
          "properties":{
            "total": {
              "type":"integer"
            },
            "trades":{
              "type": "array",
              "items":{
                "$ref": "../../swagger.json#/definitions/Trade"
              }
            }     
          }
        }
      },
      "400": {
        "description": "address Parameter missing"
      },
      "500": {
        "description": "Internal Server Error"
      }
    },
    "security": [
    ]
  }
}